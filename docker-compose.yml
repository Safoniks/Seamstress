version: "2"

services:
  nginx:
      image: nginx:latest
      ports:
        - "8080:80"
      networks:
        mynet:
          ipv4_address: 10.5.0.5
      volumes:
        - .:/app
        - ./config/nginx:/etc/nginx/conf.d
      links:
        - django

  postgresql:
    image: postgres:9.6
    env_file: prod.env
    expose:
      - 5432
    networks:
        mynet:
          ipv4_address: 10.5.0.6
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data
      - pg_backups:/pg_backups
  #  environment:
  #    - POSTGRESQL_DB=postgresql
  #    - POSTGRES_USER=postgres
  #    - POSTGRES_PASSWORD=postgres

  redis:
    image: redis
    expose:
      - "6379"
    networks:
        mynet:
          ipv4_address: 10.5.0.8

  celery:
    image: celery
    env_file: prod.env
    working_dir: /app/src
#    command: bash -c "sleep 3 && celery -A seamstress worker -E -l info --concurrency=3"
    volumes:
      - .:/app
    links:
      - postgresql
      - redis

  django:
    build: .
    #  entrypoint: /app/django_init.sh
    env_file: prod.env
    volumes:
        - .:/app
    ports:
      - "8001:8001"
    networks:
        mynet:
          ipv4_address: 10.5.0.7
    links:
      - postgresql

networks:
  mynet:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1

volumes:
  pg_data: {}
  pg_backups: {}
